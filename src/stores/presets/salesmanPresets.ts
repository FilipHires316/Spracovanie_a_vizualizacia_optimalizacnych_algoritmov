// storage for knapsack problem preset values
export const salesmanPresets = {
  // optimal number of cities
  optimum: {
    start: [[300, 300]],
    cities: [
      [512, 134],
      [78, 456],
      [345, 289],
      [123, 512],
      [234, 78],
      [567, 345],
      [89, 210],
      [456, 123],
      [321, 432],
      [210, 345],
      [134, 567],
      [390, 210],
      [267, 89],
      [478, 390],
      [156, 267],
      [501, 156],
      [312, 501],
      [189, 312],
      [423, 189],
      [276, 423],
      [345, 276],
      [198, 345],
      [432, 198],
      [267, 432]
    ]
  },
  // many cities to test hard computations
  big: {
    start: [[200, 300]],
    cities: [
      [45, 60],
      [90, 120],
      [135, 180],
      [180, 240],
      [225, 300],
      [270, 360],
      [315, 420],
      [360, 480],
      [405, 540],
      [450, 60],
      [495, 120],
      [540, 180],
      [585, 240],
      [630, 300],
      [675, 360],
      [720, 420],
      [765, 480],
      [810, 540],
      [855, 60],
      [900, 120],
      [945, 180],
      [990, 240],
      [1035, 300],
      [1080, 360],
      [1125, 420],
      [1170, 480],
      [1215, 540],
      [1260, 60],
      [1305, 120],
      [1350, 180],
      [1395, 240],
      [1440, 300],
      [1485, 360],
      [1530, 420],
      [1575, 480],
      [1620, 540],
      [1665, 60],
      [1710, 120],
      [1755, 180],
    ]
  },
  // few cities to check if algorithm works alright
  small: {
    start: [[250, 250]],
    cities: [
      [50, 100],
      [120, 250],
      [200, 320],
      [300, 450],
      [150, 400],
      [400, 150],
      [280, 380],
      [350, 500],
      [420, 280],
      [480, 100],
      [500, 450],
      [100, 50],
      [250, 200],
      [370, 370]
    ]
  },
  // no values defined
  own: {
    start: [[0, 0]],
    cities: []
  }
};
