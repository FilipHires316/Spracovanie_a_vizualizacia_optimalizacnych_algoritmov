// storage for knapsack problem preset values
export const salesmanPresets = {
  // optimal number of cities
  optimum: {
    start: [[300, 300]],
    cities: [
      [512, 134],
      [78, 456],
      [345, 289],
      [123, 512],
      [234, 78],
      [567, 345],
      [89, 210],
      [456, 123],
      [321, 432],
      [210, 345],
      [134, 567],
      [390, 210],
      [267, 89],
      [478, 390],
      [156, 267],
      [501, 156],
      [312, 501],
      [189, 312],
      [423, 189],
      [276, 423],
      [345, 276],
      [198, 345],
      [432, 198],
      [267, 432]
    ]
  },
  // many cities to test hard computations
  big: {
    start: [[200, 300]],
    cities: [
      [989, 497],
      [276, 97],
      [913, 415],
      [481, 233],
      [667, 102],
      [142, 561],
      [45, 442],
      [678, 394],
      [230, 299],
      [791, 306],
      [103, 547],
      [625, 248],
      [314, 105],
      [580, 319],
      [723, 446],
      [493, 512],
      [957, 342],
      [401, 558],
      [72, 81],
      [860, 142],
      [538, 276],
      [451, 412],
      [799, 388],
      [634, 140],
      [216, 490],
      [139, 276],
      [276, 435],
      [511, 598],
      [353, 182],
      [810, 269],
      [559, 357],
      [885, 155],
      [150, 477],
      [687, 266]
    ]
  },
  // few cities to check if algorithm works alright
  small: {
    start: [[250, 250]],
    cities: [
      [50, 100],
      [120, 250],
      [200, 320],
      [300, 450],
      [150, 400],
      [400, 150],
      [280, 380],
      [350, 500],
      [420, 280],
      [480, 100],
      [500, 450],
      [100, 50],
      [250, 200],
      [370, 370]
    ]
  },
  // no values defined
  own: {
    start: [[0, 0]],
    cities: []
  }
};
